@model Sahayee.Models.ViewModel.NewsFilterViewModel

@{
    ViewData["Title"] = "Jobs | Sahayee Admin";
}

<div class="row">
    <div class="col-md-12" style="margin-top:30px">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <button class="btn btn-primary" onclick="openModal()">Add New News</button>
            <div class="filter d-flex align-items-center">
                <label class="me-2">Filter by:</label>
                <select class="form-select me-2" id="filter" style="width: auto;">
                    @foreach (var position in Model.Country)
                    {
                        <option value="@position.Id">@position.Name</option>
                    }
                </select>
                <button class="btn btn-secondary" onclick="filterNews()">Apply Filters</button>
            </div>
        </div>

        <div id="jobTableContainer">
            @await Html.PartialAsync("_NewsTablePartial", Model.News)
        </div>
    </div>
</div>

<!-- Modal for viewing/editing job or adding new -->
<div class="modal fade" id="jobModal" tabindex="-1" aria-labelledby="jobModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post" asp-action="SaveNews">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="jobModalLabel"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div id="jobModalBody">
                </div>

            </div>
        </form>
    </div>
</div>
<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this job? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Yes</button>
            </div>
        </div>
    </div>
</div>


<script>
    const modal = new bootstrap.Modal(document.getElementById('jobModal'));

    function openModal(newsId = null) {
        if (newsId) {
            // Open modal for viewing or editing job
            fetch(`/News/EditNews?id=${newsId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('jobModalLabel').innerText = "Edit News";
                    document.getElementById('jobModalBody').innerHTML = html;
                    modal.show();
                })
                .catch(error => console.error('Error fetching News details:', error));
        } else {

            fetch(`/News/AddNews`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('jobModalLabel').innerText = "Add New News";
                    document.getElementById('jobModalBody').innerHTML = html;
                    modal.show();
                })
                .catch(error => console.error('Error fetching News details:', error));
            // Open modal for adding a new job (No details)

        }
    }
    function openDetailsModal(newsId = null) {

        // Open modal for viewing or editing job
        fetch(`/Job/DetailsPartial?id=${newsId}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById('jobModalBody').innerHTML = html;
                modal.show();
            })
            .catch(error => console.error('Error fetching job details:', error));

    }
    function filterNews() {
        const filter = document.getElementById('filter').value;

        fetch(`/News/FilterNews?country=${filter}`, {
            method: 'GET',
            headers: {
                'Accept': 'text/html' // Expect HTML response
            }
        })
            .then(response => response.text())
            .then(html => {
                document.getElementById('jobTableContainer').innerHTML = html;
            })
            .catch(error => console.error('Error fetching jobs:', error));
    }

    function deleteNews(newsId) {
        if (confirm('Are you sure you want to delete this News?')) {
            fetch(`/News/DeleteNews?id=${newsId}`, { method: 'POST' })
                .then(response => {
                    if (response.ok) {
                        alert('News deleted successfully!');
                        modal.hide();
                        filterJobs(); // Refresh job list
                    } else {
                        alert('Failed to delete News.');
                    }
                })
                .catch(error => console.error('Error deleting News:', error));
        }
    }



</script>
